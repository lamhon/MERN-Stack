{"ast":null,"code":"var _jsxFileName = \"D:\\\\1.Sor\\\\IT\\\\Project\\\\ReactJs\\\\MERN Stack\\\\client\\\\src\\\\components\\\\content\\\\checkout\\\\Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalState } from '../../.././GlobalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Content() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [cart] = state.usersAPI.cart;\n  const [total, setTotal] = useState(0);\n  const [order, setOrder] = useState({\n    user: '',\n    name: '',\n    phone: '',\n    email: '',\n    note: '',\n    info: ''\n  });\n\n  const onChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrder({ ...order,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    const getTotal = () => {\n      const total = cart.reduce((prev, item) => {\n        return prev + item.price * item.quantity;\n      }, 0);\n      setTotal(total);\n    };\n\n    getTotal();\n  }, [cart]);\n\n  const checkoutBtn = () => {\n    if (window.confirm(\"Are you sure you want to checkout?\")) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mock_row1\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"text\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: [\"Address: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"text\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: [\"Phone: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"text\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: \"Note: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => checkoutBtn(),\n          className: \"add-1\",\n          children: \"Check out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mock_row2\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"t-head\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"t-head\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), cart.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"cross\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"t-data\",\n              children: [product.product_id, \" ( x\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: product.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 84\n              }, this), \" )\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"t-data\",\n              children: product.price * product.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table__total\",\n              colSpan: 2,\n              children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 77\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Content, \"rXQPcpKNpxNrz7cnhBjSXKgQT1g=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["D:/1.Sor/IT/Project/ReactJs/MERN Stack/client/src/components/content/checkout/Content.js"],"names":["React","useContext","useEffect","useState","GlobalState","Content","state","cart","usersAPI","total","setTotal","order","setOrder","user","name","phone","email","note","info","onChangeInput","e","value","target","getTotal","reduce","prev","item","price","quantity","checkoutBtn","window","confirm","map","product","product_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { GlobalState } from '../../.././GlobalState';\r\n\r\nfunction Content() {\r\n\r\n    const state = useContext(GlobalState);\r\n    const [cart] = state.usersAPI.cart;\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const [order, setOrder] = useState({\r\n        user: '', name: '', phone: '', email: '', note: '', info: ''\r\n    });\r\n\r\n    const onChangeInput = e =>{\r\n        const {name, value} = e.target;\r\n        setOrder({...order, [name]:value});\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const getTotal = () => {\r\n            const total = cart.reduce((prev, item) => {\r\n                return prev + (item.price * item.quantity);\r\n            }, 0);\r\n\r\n            setTotal(total);\r\n        }\r\n\r\n        getTotal();\r\n    }, [cart]);\r\n\r\n    const checkoutBtn = () =>{\r\n        if(window.confirm(\"Are you sure you want to checkout?\")){\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"mock\">\r\n            <div className=\"mock_row1\">\r\n                <form>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Name: <span>*</span></label>\r\n                        <input id=\"field__input\" type=\"text\" required />\r\n                    </div>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Address: <span>*</span></label>\r\n                        <input id=\"field__input\" type=\"text\" required />\r\n                    </div>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Phone: <span>*</span></label>\r\n                        <input id=\"field__input\" type=\"text\" required />\r\n                    </div>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Email: <span>*</span></label>\r\n                        <input id=\"field__input\" type=\"email\" required />\r\n                    </div>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Note: </label>\r\n                        <input id=\"field__input\" type=\"text\" />\r\n                    </div>\r\n                    <button onClick={() => checkoutBtn()} className=\"add-1\">Check out</button>\r\n                </form>\r\n                {/* <a className=\" add-1\" href=\"single.html\">Check out</a> */}\r\n            </div>\r\n            <div className=\"mock_row2\">\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"t-head\">Product</th>\r\n                            <th className=\"t-head\">Total</th>\r\n                        </tr>\r\n                        {\r\n                            cart.map(product => (\r\n                                <tr className=\"cross\">\r\n                                    <td className=\"t-data\">{product.product_id} ( x<span>{product.quantity}</span> )</td>\r\n                                    <td className=\"t-data\">{product.price * product.quantity}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                        {/* <tr className=\"cross\">\r\n                            <td className=\"t-data\">Product ( x<span>5</span> )</td>\r\n                            <td className=\"t-data\">150000</td>\r\n                        </tr> */}\r\n                        <tr>\r\n                            <td className=\"table__total\" colSpan={2}>Total: <span>{total}</span></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}