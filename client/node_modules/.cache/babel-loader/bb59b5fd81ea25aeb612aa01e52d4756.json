{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UsersAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) {\n      return alert(\"Please login to continue\");\n    }\n\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n    } else {\n      alert(\"This product has already been added\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    addCart: addCart\n  };\n}\n\n_s(UsersAPI, \"bRWEenHGuj23AV38AmLORPHuZ9g=\");\n\n_c = UsersAPI;\nexport default UsersAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersAPI\");","map":{"version":3,"sources":["D:/1.Sor/IT/Project/ReactJs/MERN Stack/client/src/api/UsersAPI.js"],"names":["React","useState","useEffect","axios","UsersAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","_id","quantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,KAAH,EAAS;AACL,YAAMO,OAAO,GAAG,YAAS;AACrB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEX;AAAjB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AACH,SAPD,CAOE,OAAOU,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACH;AACJ,OAXD;;AAaAV,MAAAA,OAAO;AACV;AACJ,GAjBQ,EAiBN,CAACP,KAAD,CAjBM,CAAT;;AAmBA,QAAMkB,OAAO,GAAG,MAAMC,OAAN,IAAiB;AAC7B,QAAG,CAAClB,QAAJ,EAAa;AACT,aAAOc,KAAK,CAAC,0BAAD,CAAZ;AACH;;AAED,UAAMK,KAAK,GAAGf,IAAI,CAACgB,KAAL,CAAWC,IAAI,IAAG;AAC5B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAIA,QAAGH,KAAH,EAAS;AACLd,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAC,GAAGc,OAAJ;AAAaK,QAAAA,QAAQ,EAAE;AAAvB,OAAV,CAAD,CAAP;AACH,KAFD,MAEK;AACDT,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GAdD;;AAeA,SAAO;AACHd,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHc,IAAAA,OAAO,EAAEA;AAHN,GAAP;AAKH;;GA5CQnB,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UsersAPI(token){\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [cart, setCart] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            const getUser = async()=>{\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: { Authorization: token}\r\n                    });\r\n\r\n                    setIsLogged(true);\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\r\n                } catch (err) {\r\n                    alert(err.response.data.msg);\r\n                }\r\n            }\r\n\r\n            getUser();\r\n        }\r\n    }, [token]);\r\n\r\n    const addCart = async(product) =>{\r\n        if(!isLogged){\r\n            return alert(\"Please login to continue\");\r\n        }\r\n\r\n        const check = cart.every(item =>{\r\n            return item._id !== product._id;\r\n        });\r\n\r\n        if(check){\r\n            setCart([...cart, {...product, quantity: 1}]);\r\n        }else{\r\n            alert(\"This product has already been added\")\r\n        }\r\n    }\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        addCart: addCart\r\n    }\r\n}\r\n\r\nexport default UsersAPI;"]},"metadata":{},"sourceType":"module"}