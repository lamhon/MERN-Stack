{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UsersAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n          setUser(res.data);\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) {\n      return alert(\"Please login to continue\");\n    }\n\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"This product has already been added\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart\n  };\n}\n\n_s(UsersAPI, \"VeZlzknG2Z4F77ho8jswXkWkWM4=\");\n\n_c = UsersAPI;\nexport default UsersAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersAPI\");","map":{"version":3,"sources":["D:/1.Sor/IT/Project/ReactJs/MERN Stack/client/src/api/UsersAPI.js"],"names":["React","useState","useEffect","axios","UsersAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","user","setUser","getUser","res","get","headers","Authorization","data","role","console","log","err","alert","response","msg","addCart","product","check","every","item","_id","quantity","patch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAJ,EAAW;AACP,YAAMS,OAAO,GAAG,YAAY;AACxB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEb;AAAjB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBX,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEAE,UAAAA,OAAO,CAACI,GAAG,CAACI,IAAJ,CAAST,IAAV,CAAP;AAEAG,UAAAA,OAAO,CAACE,GAAG,CAACI,IAAL,CAAP;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,SAZD,CAYE,OAAOQ,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACH;AACJ,OAhBD;;AAkBAZ,MAAAA,OAAO;AACV;AACJ,GAtBQ,EAsBN,CAACT,KAAD,CAtBM,CAAT;;AAwBA,QAAMsB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AAC/B,QAAI,CAACtB,QAAL,EAAe;AACX,aAAOkB,KAAK,CAAC,0BAAD,CAAZ;AACH;;AAED,UAAMK,KAAK,GAAGnB,IAAI,CAACoB,KAAL,CAAWC,IAAI,IAAI;AAC7B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAIA,QAAIH,KAAJ,EAAW;AACPlB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAE,GAAGkB,OAAL;AAAcK,QAAAA,QAAQ,EAAE;AAAxB,OAAV,CAAD,CAAP;AAEA,YAAM9B,KAAK,CAAC+B,KAAN,CAAY,eAAZ,EAA6B;AAAExB,QAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAU,EAAE,GAAGkB,OAAL;AAAcK,UAAAA,QAAQ,EAAE;AAAxB,SAAV;AAAR,OAA7B,EAA+E;AACjFhB,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEb;AAAjB;AADwE,OAA/E,CAAN;AAGH,KAND,MAMO;AACHmB,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GAlBD;;AAmBA,SAAO;AACHlB,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAHH;AAIHgB,IAAAA,OAAO,EAAEA;AAJN,GAAP;AAMH;;GAvDQvB,Q;;KAAAA,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UsersAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [cart, setCart] = useState([]);\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const getUser = async () => {\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: { Authorization: token }\r\n                    });\r\n\r\n                    setIsLogged(true);\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\r\n\r\n                    setCart(res.data.cart);\r\n\r\n                    setUser(res.data);\r\n                    console.log(res);\r\n                } catch (err) {\r\n                    alert(err.response.data.msg);\r\n                }\r\n            }\r\n\r\n            getUser();\r\n        }\r\n    }, [token]);\r\n\r\n    const addCart = async (product) => {\r\n        if (!isLogged) {\r\n            return alert(\"Please login to continue\");\r\n        }\r\n\r\n        const check = cart.every(item => {\r\n            return item._id !== product._id;\r\n        });\r\n\r\n        if (check) {\r\n            setCart([...cart, { ...product, quantity: 1 }]);\r\n\r\n            await axios.patch('/user/addcart', { cart: [...cart, { ...product, quantity: 1 }] }, {\r\n                headers: { Authorization: token }\r\n            });\r\n        } else {\r\n            alert(\"This product has already been added\")\r\n        }\r\n    }\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        cart: [cart, setCart],\r\n        addCart: addCart\r\n    }\r\n}\r\n\r\nexport default UsersAPI;"]},"metadata":{},"sourceType":"module"}