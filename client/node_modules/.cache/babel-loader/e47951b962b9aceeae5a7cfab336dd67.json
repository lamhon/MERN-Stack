{"ast":null,"code":"var _jsxFileName = \"D:\\\\1.Sor\\\\IT\\\\Project\\\\ReactJs\\\\MERN Stack\\\\client\\\\src\\\\components\\\\content\\\\checkout\\\\Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalState } from '../../.././GlobalState';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Content() {\n  _s();\n\n  const state = useContext(GlobalState);\n  const [cart] = state.usersAPI.cart;\n  const user = state.usersAPI.user;\n  const [info, setInfo] = useState([]);\n  const [order, setOrder] = useState({\n    user: '',\n    name: '',\n    phone: '',\n    address: '',\n    email: '',\n    note: '',\n    info: []\n  }); // console.log(user);\n\n  const [total, setTotal] = useState(0); // add product from cart to order info \n\n  useEffect(() => {\n    let productsBuy = [];\n    cart.map(item => productsBuy = [...productsBuy, {\n      _id: item._id,\n      product_id: item.product_id,\n      title: item.title,\n      price: item.price,\n      sale: item.sale,\n      image: item.image,\n      category: item.category,\n      quantity: item.quantity\n    }]);\n    setInfo(productsBuy);\n    setOrder({ ...order,\n      user: user._id\n    });\n  }, [cart]);\n  useEffect(() => {\n    setOrder({ ...order,\n      user: user._id\n    });\n    setOrder({ ...order,\n      info: info\n    });\n  }, [info]); // setInfo([...info, {_id: item._id, product_id: item.product_id, title: item.title, price: item.price, sale: item.sale, image: item.image, category: item.category, quantity: item.quantity}])\n  // setOrder({ info: info })\n\n  const onChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrder({ ...order,\n      [name]: value\n    });\n    console.log(order);\n  };\n\n  const orderSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.post('/api/checkout', { ...order\n      });\n      alert('Order has been submitted');\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  useEffect(() => {\n    const getTotal = () => {\n      const total = cart.reduce((prev, item) => {\n        return prev + item.price * item.quantity;\n      }, 0);\n      setTotal(total);\n    };\n\n    getTotal();\n  }, [cart]);\n\n  const checkoutBtn = () => {\n    if (window.confirm(\"Are you sure you want to checkout?\")) {\n      orderSubmit(); // alert(\"USER ID: \" +user._id + \" | USERINFO: \" + user.info);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mock_row1\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"text\",\n            name: \"name\",\n            value: order.name,\n            onChange: onChangeInput,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: [\"Address: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"text\",\n            name: \"address\",\n            value: order.address,\n            onChange: onChangeInput,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: [\"Phone: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"text\",\n            name: \"phone\",\n            value: order.phone,\n            onChange: onChangeInput,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"email\",\n            name: \"email\",\n            value: order.email,\n            onChange: onChangeInput,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mock__input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"field__input\",\n            children: \"Note: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"field__input\",\n            type: \"text\",\n            name: \"note\",\n            value: order.note,\n            onChange: onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => checkoutBtn(),\n          className: \"add-1\",\n          children: \"Check out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mock_row2\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"t-head\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"t-head\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), cart.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"cross\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"t-data\",\n              children: [product.product_id, \" ( x\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: product.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 84\n              }, this), \" )\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"t-data\",\n              children: product.price * product.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table__total\",\n              colSpan: 2,\n              children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 81\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Content, \"96gZFyTPosby41WtXt1iuHpJuJ0=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["D:/1.Sor/IT/Project/ReactJs/MERN Stack/client/src/components/content/checkout/Content.js"],"names":["React","useContext","useEffect","useState","GlobalState","axios","Content","state","cart","usersAPI","user","info","setInfo","order","setOrder","name","phone","address","email","note","total","setTotal","productsBuy","map","item","_id","product_id","title","price","sale","image","category","quantity","onChangeInput","e","value","target","console","log","orderSubmit","preventDefault","post","alert","err","response","data","msg","getTotal","reduce","prev","checkoutBtn","window","confirm","product"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { GlobalState } from '../../.././GlobalState';\r\nimport axios from 'axios';\r\n\r\nfunction Content() {\r\n    const state = useContext(GlobalState);\r\n    const [cart] = state.usersAPI.cart;\r\n    const user = state.usersAPI.user;\r\n    const [info, setInfo] = useState([]);\r\n    const [order, setOrder] = useState({\r\n        user: '', name: '', phone: '', address: '', email: '', note: '', info: []\r\n    });\r\n\r\n    // console.log(user);\r\n\r\n    const [total, setTotal] = useState(0);\r\n\r\n\r\n\r\n    // add product from cart to order info \r\n    useEffect(() => {\r\n        let productsBuy = [];\r\n        cart.map(item => productsBuy = [...productsBuy, { _id: item._id, product_id: item.product_id, title: item.title, price: item.price, sale: item.sale, image: item.image, category: item.category, quantity: item.quantity }]);\r\n        setInfo(productsBuy);\r\n        setOrder({ ...order, user: user._id });\r\n    }, [cart]);\r\n\r\n    useEffect(() => {\r\n        setOrder({ ...order, user: user._id });\r\n        setOrder({ ...order, info: info });\r\n    }, [info]);\r\n\r\n    // setInfo([...info, {_id: item._id, product_id: item.product_id, title: item.title, price: item.price, sale: item.sale, image: item.image, category: item.category, quantity: item.quantity}])\r\n    // setOrder({ info: info })\r\n\r\n\r\n\r\n\r\n    const onChangeInput = e => {\r\n        const { name, value } = e.target;\r\n        setOrder({ ...order, [name]: value });\r\n        console.log(order);\r\n    }\r\n\r\n    const orderSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('/api/checkout', { ...order });\r\n\r\n            alert('Order has been submitted');\r\n        } catch (err) {\r\n            alert(err.response.data.msg);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getTotal = () => {\r\n            const total = cart.reduce((prev, item) => {\r\n                return prev + (item.price * item.quantity);\r\n            }, 0);\r\n\r\n            setTotal(total);\r\n        }\r\n\r\n        getTotal();\r\n    }, [cart]);\r\n\r\n    const checkoutBtn = () => {\r\n        if (window.confirm(\"Are you sure you want to checkout?\")) {\r\n            orderSubmit();\r\n            // alert(\"USER ID: \" +user._id + \" | USERINFO: \" + user.info);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"mock\">\r\n            <div className=\"mock_row1\">\r\n                <form>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Name: <span>*</span></label>\r\n                        <input\r\n                            id=\"field__input\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={order.name}\r\n                            onChange={onChangeInput}\r\n                            required />\r\n                    </div>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Address: <span>*</span></label>\r\n                        <input\r\n                            id=\"field__input\"\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            value={order.address}\r\n                            onChange={onChangeInput}\r\n                            required />\r\n                    </div>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Phone: <span>*</span></label>\r\n                        <input\r\n                            id=\"field__input\"\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            value={order.phone}\r\n                            onChange={onChangeInput}\r\n                            required />\r\n                    </div>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Email: <span>*</span></label>\r\n                        <input\r\n                            id=\"field__input\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={order.email}\r\n                            onChange={onChangeInput}\r\n                            required />\r\n                    </div>\r\n                    <div className=\"mock__input\">\r\n                        <label htmlFor=\"field__input\">Note: </label>\r\n                        <input\r\n                            id=\"field__input\"\r\n                            type=\"text\"\r\n                            name=\"note\"\r\n                            value={order.note}\r\n                            onChange={onChangeInput} />\r\n                    </div>\r\n                    <button onClick={() => checkoutBtn()} className=\"add-1\">Check out</button>\r\n                </form>\r\n                {/* <a className=\" add-1\" href=\"single.html\">Check out</a> */}\r\n            </div>\r\n            <div className=\"mock_row2\">\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"t-head\">Product</th>\r\n                            <th className=\"t-head\">Total</th>\r\n                        </tr>\r\n                        {\r\n                            cart.map(product => (\r\n                                <tr className=\"cross\">\r\n                                    <td className=\"t-data\">{product.product_id} ( x<span>{product.quantity}</span> )</td>\r\n                                    <td className=\"t-data\">{product.price * product.quantity}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                        {/* {\r\n                            <tr className=\"cross\">\r\n                                <td className=\"t-data\">Product ( x<span>5</span> )</td>\r\n                                <td className=\"t-data\">150000</td>\r\n                            </tr>\r\n                        } */}\r\n                        <tr>\r\n                            {\r\n                                <td className=\"table__total\" colSpan={2}>Total: <span>{total}</span></td>\r\n                            }\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}